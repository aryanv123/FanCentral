[{"/Users/prashugopi/Documents/INFO490/FanCentral/src/index.js":"1","/Users/prashugopi/Documents/INFO490/FanCentral/src/reportWebVitals.js":"2","/Users/prashugopi/Documents/INFO490/FanCentral/src/App.js":"3","/Users/prashugopi/Documents/INFO490/FanCentral/src/Reward.js":"4","/Users/prashugopi/Documents/INFO490/FanCentral/src/UW.js":"5","/Users/prashugopi/Documents/INFO490/FanCentral/src/account.js":"6","/Users/prashugopi/Documents/INFO490/FanCentral/src/Home.js":"7","/Users/prashugopi/Documents/INFO490/FanCentral/src/Login.js":"8","/Users/prashugopi/Documents/INFO490/FanCentral/src/Comment.js":"9"},{"size":500,"mtime":1620420480560,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1615527697129,"results":"12","hashOfConfig":"11"},{"size":4252,"mtime":1621573053238,"results":"13","hashOfConfig":"11"},{"size":6721,"mtime":1620420480554,"results":"14","hashOfConfig":"11"},{"size":1981,"mtime":1620420480555,"results":"15","hashOfConfig":"11"},{"size":1158,"mtime":1620420480555,"results":"16","hashOfConfig":"11"},{"size":10171,"mtime":1621573053239,"results":"17","hashOfConfig":"11"},{"size":4067,"mtime":1621577397500,"results":"18","hashOfConfig":"11"},{"size":3914,"mtime":1621573053239,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"mf70qb",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},"/Users/prashugopi/Documents/INFO490/FanCentral/src/index.js",[],["43","44"],"/Users/prashugopi/Documents/INFO490/FanCentral/src/reportWebVitals.js",[],"/Users/prashugopi/Documents/INFO490/FanCentral/src/App.js",[],"/Users/prashugopi/Documents/INFO490/FanCentral/src/Reward.js",[],"/Users/prashugopi/Documents/INFO490/FanCentral/src/UW.js",[],"/Users/prashugopi/Documents/INFO490/FanCentral/src/account.js",[],"/Users/prashugopi/Documents/INFO490/FanCentral/src/Home.js",["45"],"import './App.css';\nimport uwb from './images/uwbasketball.png';\nimport uwf from './images/uwfootball.jpg';\nimport badge from './images/medal.png';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport React from \"react\";\nimport {\n    Container,\n    Row,\n    Col\n} from 'react-bootstrap';\nimport {\n    Link\n  } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Tweet } from \"react-twitter-widgets\";\nimport { CommentBox } from './Comment.js'\n\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {comment: new Array(9).fill(false)}\n        this.commentShow = this.commentShow.bind(this);\n    }\n\n    commentShow(index) {\n        var clone = Object.assign( {}, this.state.comment);\n        if (clone[index] == false) {\n            clone[index] = true;\n        } else {\n            clone[index] = false;\n        }\n        this.setState({ comment: clone })\n    }\n\n    render() {\n        return(\n            <div className='App-header'>\n                <Container fluid>\n                    <Row>\n                        <Col xl={2} className=\"Teams\">\n                            <div className='Teamtag'>\n                                My Teams\n                            </div>\n                            <Link to='/uw'><img width='150' height='150' alt=\"idk\" src={uwb} style={{marginBottom: '0.5rem'}}></img></Link>\n                            <img width='150' height='150' alt=\"idk\" src={uwf} style={{marginBottom: '0.5rem'}}></img>\n                        </Col>\n                        <Col xl={8} className='Feed'>\n                            <Card style={{ width: '40rem', background: '#303030', marginBottom: '2rem', marginLeft: '17rem' }} className=\"Post\">\n                                <Card.Header className='d-flex justify-content-between Teamtag' style={{ background: '#3a3b3c'}}>From Twitter...</Card.Header>\n                                <Card.Body>\n                                    <Tweet tweetId='1381674911517667329' />\n                                </Card.Body>\n                                <div style={{ display: 'flex', marginLeft: '1rem', marginBottom: '1rem' }}><Button variant=\"secondary\" onClick={() => this.commentShow(0)}>Comment</Button></div>\n                                { this.state.comment[0] ? <CommentBox addPoints={this.props.addPoints}/> : null }\n                            </Card>\n                            <Card style={{ width: '45rem', background: '#303030', marginBottom: '2rem' }} className=\"Post\">\n                                <Card.Header className='d-flex justify-content-between' style={{ background: '#3a3b3c'}}>From Reddit...</Card.Header>\n                                <Card.Body>\n                                <iframe id=\"reddit-embed\" title=\"1\" src=\"https://www.redditmedia.com/r/huskies/comments/9zvyuw/the_perfect_postgame_quote/?ref_source=embed&amp;ref=share&amp;embed=true&amp;theme=light\" sandbox=\"allow-scripts allow-same-origin allow-popups\" height=\"426\" width=\"640\" scrolling=\"no\"></iframe>\n                                </Card.Body>\n                                <div style={{ display: 'flex', marginLeft: '1rem', marginBottom: '1rem' }}><Button variant=\"secondary\" onClick={() => this.commentShow(1)}>Comment</Button></div>\n                                { this.state.comment[1] ? <CommentBox/> : null }\n                            </Card>\n                            <Card style={{ width: '40rem', background: '#303030', marginBottom: '2rem', marginLeft: '17rem' }} className=\"Post\">\n                                <Card.Header className='d-flex justify-content-between Teamtag' style={{ background: '#3a3b3c'}}>From Twitter...</Card.Header>\n                                <Card.Body>\n                                    <Tweet tweetId='1380561323226845184' />\n                                </Card.Body>\n                                <div style={{ display: 'flex', marginLeft: '1rem', marginBottom: '1rem' }}><Button variant=\"secondary\" onClick={() => this.commentShow(2)}>Comment</Button></div>\n                                { this.state.comment[2] ? <CommentBox/> : null }\n                            </Card>\n                            <Card style={{ width: '45rem', background: '#303030', marginBottom: '2rem' }} className=\"Post\">\n                                <Card.Header className='d-flex justify-content-between Teamtag' style={{ background: '#3a3b3c'}}>From Reddit...</Card.Header>\n                                <Card.Body>\n                                <iframe id=\"reddit-embed\" title=\"2\" src=\"https://www.redditmedia.com/r/huskies/comments/e47nt1/cougar_fans_trying_to_talk_about_our_season_in_a/?ref_source=embed&amp;ref=share&amp;embed=true&amp;theme=light\" sandbox=\"allow-scripts allow-same-origin allow-popups\" height=\"543\" width=\"640\" scrolling=\"no\"></iframe>                            \n                                </Card.Body>\n                                <div style={{ display: 'flex', marginLeft: '1rem', marginBottom: '1rem' }}><Button variant=\"secondary\" onClick={() => this.commentShow(3)}>Comment</Button></div>\n                                { this.state.comment[3] ? <CommentBox/> : null }\n                            </Card>\n                            <Card style={{ width: '40rem', background: '#303030', marginBottom: '2rem', marginLeft: '17rem' }} className=\"Post\">\n                                <Card.Header className='d-flex justify-content-between Teamtag' style={{ background: '#3a3b3c'}}>From Twitter...</Card.Header>\n                                <Card.Body>\n                                    <Tweet tweetId='1379131724894859266' />\n                                </Card.Body>\n                                <div style={{ display: 'flex', marginLeft: '1rem', marginBottom: '1rem' }}><Button variant=\"secondary\" onClick={() => this.commentShow(4)}>Comment</Button></div>\n                                { this.state.comment[4] ? <CommentBox/> : null }\n                            </Card>\n                            <Card style={{ width: '40rem', background: '#303030', marginBottom: '2rem', marginLeft: '17rem' }} className=\"Post\">\n                                <Card.Header className='d-flex justify-content-between Teamtag' style={{ background: '#3a3b3c'}}>From Twitter...</Card.Header>\n                                <Card.Body>\n                                    <Tweet tweetId='1376619627824914433' />\n                                </Card.Body>\n                                <div style={{ display: 'flex', marginLeft: '1rem', marginBottom: '1rem' }}><Button variant=\"secondary\" onClick={() => this.commentShow(5)}>Comment</Button></div>\n                                { this.state.comment[5] ? <CommentBox/> : null }\n                            </Card>\n                            <Card style={{ width: '45rem', background: '#303030', marginBottom: '2rem' }} className=\"Post\">\n                                <Card.Header className='d-flex justify-content-between Teamtag' style={{ background: '#3a3b3c'}}>From Reddit...</Card.Header>\n                                <Card.Body>\n                                <iframe id=\"reddit-embed\" title=\"3\" src=\"https://www.redditmedia.com/r/huskies/comments/jz6et7/i_mean/?ref_source=embed&amp;ref=share&amp;embed=true\" sandbox=\"allow-scripts allow-same-origin allow-popups\" height=\"543\" width=\"640\" scrolling=\"no\"></iframe>                            \n                                </Card.Body>\n                                <div style={{ display: 'flex', marginLeft: '1rem', marginBottom: '1rem' }}><Button variant=\"secondary\" onClick={() => this.commentShow(6)}>Comment</Button></div>\n                                { this.state.comment[6] ? <CommentBox/> : null }\n                            </Card>\n                            <Card style={{ width: '40rem', background: '#303030', marginBottom: '2rem', marginLeft: '17rem' }} className=\"Post\">\n                                <Card.Header className='d-flex justify-content-between Teamtag' style={{ background: '#3a3b3c'}}>From Twitter...</Card.Header>\n                                <Card.Body>\n                                    <Tweet tweetId='1373318416908439554' />\n                                </Card.Body>\n                                <div style={{ display: 'flex', marginLeft: '1rem', marginBottom: '1rem' }}><Button variant=\"secondary\" onClick={() => this.commentShow(7)}>Comment</Button></div>\n                                { this.state.comment[7] ? <CommentBox/> : null }\n                            </Card>\n                            <Card style={{ width: '45rem', background: '#303030', marginBottom: '2rem' }} className=\"Post\">\n                                <Card.Header className='d-flex justify-content-between Teamtag' style={{ background: '#3a3b3c'}}>From Reddit...</Card.Header>\n                                <Card.Body>\n                                <iframe id=\"reddit-embed\" title=\"4\" src=\"https://www.redditmedia.com/r/huskies/comments/cxwerq/auburn_fans_get_it/?ref_source=embed&amp;ref=share&amp;embed=true\" sandbox=\"allow-scripts allow-same-origin allow-popups\" height=\"543\" width=\"640\" scrolling=\"no\"></iframe>\n                                </Card.Body>\n                                <div style={{ display: 'flex', marginLeft: '1rem', marginBottom: '1rem' }}><Button variant=\"secondary\" onClick={() => this.commentShow(8)}>Comment</Button></div>\n                                { this.state.comment[8] ? <CommentBox/> : null }\n                            </Card>\n                        </Col>\n                        <Col xl={2} className=\"Friends\">\n                            <img width='120' alt=\"idk\" src={badge} style={{marginBottom: '0.5rem', float: 'right' }} />\n                            {this.props.points}\n                            <Link to='/rewards'>\n                                <Button variant=\"secondary\">Rewards Center</Button>\n                            </Link>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default Home;","/Users/prashugopi/Documents/INFO490/FanCentral/src/Login.js",["46"],"import './App.css';\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\n\nasync function loginUser(email, password) {\n    fetch('http://127.0.0.1:5000/login?username=' + email + '&password=' + password)\n        .then(response => response.json())\n        .then(data => console.log(data));\n}\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false,\n            error: false\n        };\n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    handleShow() {\n        this.setState({\n            show: true\n        })\n    }\n\n    handleClose() {\n        this.setState({\n            show: false\n        })\n    }\n\n    // login (username, password) {\n    //     const http = new XMLHttpRequest()\n    //     const url = \"localhost:5000/login?username=\" + username + \"&password=\" + password\n    //     http.open(\"GET\", url)\n    //     http.send\n\n    //     http.onreadystatechange = (e) => {\n    //         response = Http.responseText\n    //         console.log(response)\n    //     }\n    // }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state.email)\n        console.log(this.state.password)\n    }\n\n    async handleLogin() {\n        fetch('http://127.0.0.1:5000/login?username=' + this.state.email + '&password=' + this.state.password)\n        .then(response => response.json())\n        .then(data => {\n            console.log(data)\n            console.log(data.loggedIn)\n            if (data.loggedIn === \"True\") {\n                this.props.logged();\n            } else {\n                this.setState({\n                    error: true\n                })\n            }\n        })\n    }\n\n    render() {\n        \n        return(\n            <div className='App-header'>\n                <h1>Welcome to FanCentral!</h1>\n                <h2>The centralized sports hub where you can find all sports related information and posts all on one site!</h2>\n                <Button variant=\"secondary\" onClick={this.handleShow}>Login</Button>\n                <Modal show={this.state.show} onHide={this.handleClose} animation={false} centered>\n                    <Modal.Dialog style={{ color: 'black' }}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Welcome to FanCentral!</Modal.Title>\n                    </Modal.Header>\n\n                    <Modal.Body>\n                        <Form onSubmit={this.handleSubmit}>\n                            <Form.Group controlId=\"formBasicEmail\">\n                                {this.state.error ? <Alert variant='danger'>Incorrect combination of Email and Password!</Alert> : null}\n                                <Form.Label>Email address</Form.Label>\n                                <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={e => this.setState({ email: e.target.value })} />\n                                <Form.Text className=\"text-muted\">\n                                    We'll never share your email with anyone else.\n                                </Form.Text>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => this.setState({ password: e.target.value })} />\n                            </Form.Group>\n                            <Button type=\"submit\" variant='secondary' onClick={() => {this.handleLogin()}}>\n                                Submit\n                            </Button>\n    \n                        </Form>\n                    </Modal.Body>\n\n                    </Modal.Dialog>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Login;","/Users/prashugopi/Documents/INFO490/FanCentral/src/Comment.js",["47"],"import React from \"react\";\nimport './comment.css'\n\nclass CommentBox extends React.Component {\n    constructor(props) {\n      super(props);\n      \n      this.state = {\n        showComments: false,\n        comments: [\n          {id: 1, author: \"landiggity\", body: \"Wow that is so cool!\"},\n          {id: 2, author: \"scarlett-jo\", body: \"That's a mighty fine comment you've got there my good looking fellow...\"},\n          {id: 3, author: \"rosco\", body: \"Yeet\"}\n        ]\n      };\n    }\n    \n    render () {\n      const comments = this._getComments();\n      let commentNodes;\n      let buttonText = 'Show Comments';\n      \n      if (this.state.showComments) {\n        buttonText = 'Hide Comments';\n        commentNodes = <div className=\"comment-list\">{comments}</div>;\n      }\n      \n      return(\n        <div className=\"comment-box\">\n          <h3>Add Comment</h3>\n          <CommentForm addComment={this._addComment.bind(this)}/>\n          <button id=\"comment-reveal\" onClick={this._handleClick.bind(this)}>\n            {buttonText}\n          </button>\n          <h3>Comments</h3>\n          <h4 className=\"comment-count\">\n            {this._getCommentsTitle(comments.length)}\n          </h4>\n          {commentNodes}\n        </div>  \n      );\n    } // end render\n    \n    _addComment(author, body) {\n      const comment = {\n        id: this.state.comments.length + 1,\n        author,\n        body\n      };\n      this.props.addPoints();\n      this.setState({ comments: this.state.comments.concat([comment]) }); // *new array references help React stay fast, so concat works better than push here.\n    }\n    \n    _handleClick() {\n      this.setState({\n        showComments: !this.state.showComments\n      });\n    }\n    \n    _getComments() {    \n      return this.state.comments.map((comment) => { \n        return (\n          <Comment \n            author={comment.author} \n            body={comment.body} \n            key={comment.id} />\n        ); \n      });\n    }\n    \n    _getCommentsTitle(commentCount) {\n      if (commentCount === 0) {\n        return 'No comments yet';\n      } else if (commentCount === 1) {\n        return \"1 comment\";\n      } else {\n        return `${commentCount} comments`;\n      }\n    }\n} // end CommentBox component\n  \nclass CommentForm extends React.Component {\n    render() {\n      return (\n        <form className=\"comment-form\" id=\"commentForm\" onSubmit={this._handleSubmit.bind(this)}>\n          <div className=\"comment-form-fields\">\n            {/* <input placeholder=\"Name\" required ref={(input) => this._author = input}></input><br /> */}\n            <h4 style={{ color: 'black', display: 'flex'}}>Aryan</h4>\n            <textarea placeholder=\"Comment\" rows=\"2\" required ref={(textarea) => this._body = textarea}></textarea>\n          </div>\n          <div className=\"comment-form-actions\">\n            <button type=\"submit\">Post Comment</button>\n          </div>\n        </form>\n      );\n    } // end render\n    \n    _handleSubmit(event) { \n      event.preventDefault();   // prevents page from reloading on submit\n      // let author = this._author;\n      let author = \"Aryan\"\n      let body = this._body;\n      // this.props.addComment(author.value, body.value);\n      this.props.addComment(\"Aryan\", body.value);\n      document.getElementById('commentForm').reset();\n    }\n} // end CommentForm component\n  \nclass Comment extends React.Component {\n    render () {\n      return(\n        <div className=\"comment\">\n          <p className=\"comment-header\">{this.props.author}</p>\n          <p className=\"comment-body\">- {this.props.body}</p>\n          <div className=\"comment-footer\">\n            <a href=\"/\" className=\"comment-footer-delete\" onClick={this._deleteComment}>Delete Comment</a>\n          </div>\n        </div>\n      );\n    }\n    _deleteComment() {\n      alert(\"-- DELETE Comment Functionality COMMING SOON...\");\n    }\n}\n  \n  \nexport { Comment, CommentForm, CommentBox }",["48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":30,"column":26,"nodeType":"56","messageId":"57","endLine":30,"endColumn":28},{"ruleId":"58","severity":1,"message":"59","line":9,"column":16,"nodeType":"60","messageId":"61","endLine":9,"endColumn":25},{"ruleId":"58","severity":1,"message":"62","line":101,"column":11,"nodeType":"60","messageId":"61","endLine":101,"endColumn":17},{"ruleId":"50","replacedBy":"63"},{"ruleId":"52","replacedBy":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'loginUser' is defined but never used.","Identifier","unusedVar","'author' is assigned a value but never used.",["65"],["66"],"no-global-assign","no-unsafe-negation"]